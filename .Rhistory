setwd("C:/Users/sebas/Desktop/AI/Statistical learning/accidentes_med")
#la sgte linea no es necesaria si se carga desde el inicio de la app el archivo
rf<-get(load("modelosRandomForestBarrio2018.RData"))
View(modelosRandomForestComuna2017)
modelo<-rf[[Altamira]]
modelo<-rf[[Altavista]]
modelo<-rf[["Altavista"]]
View(modelo)
Fechas<-read.csv("fest_etiq.csv")
library(lubridate)
subseting_fecha<-function(data,fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subset(data,(mdy(data$FECHA))>=fechai)
a<-subset(a,(mdy(a$FECHA))<=fechaf)
return(a)
}
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-a[-6]
#obteniendo el modelo del barrio ingresado
modelo<-rf[[barrio]]
#realizando la predicción
Accidentes_Predichos<-predict(modelo,a)
Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
return(Fecha)
}
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/30/2018"))
View(modelo)
modelo<-rf[["Altamira"]]
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/30/2018"))
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-a[-6]
#obteniendo el modelo del barrio ingresado
#modelo<-rf[[barrio]]
#realizando la predicción
#Accidentes_Predichos<-predict(modelo,a)
#Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
return(a)
}
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/30/2018"))
View(w)
Accidentes_Predichos<-predict(modelo,w)
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("09/29/2018"))
modelo<-rf[["Altamira"]]
Accidentes_Predichos<-predict(modelo,w)
View(modelo)
w<-w[c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO")]
View(w)
Accidentes_Predichos<-predict(modelo,w)
w[Freq]<- NA
w["Freq"]<- NA
View(w)
Accidentes_Predichos<-predict(modelo,w)
w["Freq"]<- 0
Accidentes_Predichos<-predict(modelo,w)
Accidentes_Predichos<-predict(modelo,newdata = w)
library(randomForest)
Accidentes_Predichos<-predict(modelo,w)
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("09/29/2018"))
w<-w[c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO")]
modelo<-rf[["Altamira"]]
Accidentes_Predichos<-predict(modelo,w)
View(w)
View(modelo)
modelo[["call"]]
w<-pred_barrios("Altamira",mdy("1/01/2017"),mdy("09/29/2017"))
w<-w[c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO")]
modelo<-rf[["Altamira"]]
Accidentes_Predichos<-predict(modelo,w)
show(errors)
library(lubridate)
library(randomForest)
databaseBarrios<-read.csv(file = "Fbarrios1.csv", sep = ",")
Barrios<-unique(databaseBarrios$BARRIO)
DIA<-array()
DIA<-day(mdy(databaseBarrios$FECHA))
databaseBarrios<-cbind.data.frame(databaseBarrios,DIA)
databaseBarrios<-databaseBarrios[,c('X','FECHA','NOMBRE_DIA','FESTIVO','DIA','SEMANA','MES','ANIO','BARRIO','Freq')]
modelosRandomForestComuna2017<-list()
mseRandomForestComuna2017<-array()
for (barrio in Barrios){
#Para el barrio SELECCIONADO
aux<-subset.data.frame(databaseBarrios,databaseBarrios$BARRIO=="Aranjuez")
#organizando el dataframe por las fechas
aux<-aux[order(as.Date(aux$FECHA, format="%m/%d/%Y")),]
#dejando solo las etiquetas necesarias ( se eliminan X, comuna)
aux<-aux[names(aux) %in% c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO","Freq")]
#partiendo el dataset por entrenamiento y validación (2018)
aux_train_2018<-subset.data.frame(aux,aux$ANIO < 2018)
aux_test_2018<-subset.data.frame(aux,aux$ANIO >= 2018)
#entrenando el modelo
mBasico<-randomForest(Freq ~ NOMBRE_DIA + FESTIVO + DIA + SEMANA + MES + ANIO,
data=aux_train_2018)
predicted<-predict(mBasico,aux_test_2018)
#prediciendo accidentes a partir del modelo (sobre el conjunto de validación)
aux_test_2018<-cbind.data.frame(aux_test_2018,predicted)
aux_test_2018<-cbind.data.frame(aux_test_2018,residual=aux_test_2018$Freq - aux_test_2017$predicted)
#MSE sobre validacion
mse=(sum((aux_test_2018$residual^2)))/nrow(aux_test_2018)
mean(mBasico$mse)
#guardando el modelo del barrio
modelosRandomForestComuna2017[[barrio]]<-mBasico
mseRandomForestComuna2017[barrio]<-mse
}
for (barrio in Barrios){
#Para el barrio SELECCIONADO
aux<-subset.data.frame(databaseBarrios,databaseBarrios$BARRIO=="Aranjuez")
#organizando el dataframe por las fechas
aux<-aux[order(as.Date(aux$FECHA, format="%m/%d/%Y")),]
#dejando solo las etiquetas necesarias ( se eliminan X, comuna)
aux<-aux[names(aux) %in% c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO","Freq")]
#partiendo el dataset por entrenamiento y validación (2018)
aux_train_2018<-subset.data.frame(aux,aux$ANIO < 2018)
aux_test_2018<-subset.data.frame(aux,aux$ANIO >= 2018)
#entrenando el modelo
mBasico<-randomForest(Freq ~ NOMBRE_DIA + FESTIVO + DIA + SEMANA + MES + ANIO,
data=aux_train_2018)
predicted<-predict(mBasico,aux_test_2018)
#prediciendo accidentes a partir del modelo (sobre el conjunto de validación)
aux_test_2018<-cbind.data.frame(aux_test_2018,predicted)
aux_test_2018<-cbind.data.frame(aux_test_2018,residual=aux_test_2018$Freq - aux_test_2018$predicted)
#MSE sobre validacion
mse=(sum((aux_test_2018$residual^2)))/nrow(aux_test_2018)
mean(mBasico$mse)
#guardando el modelo del barrio
modelosRandomForestComuna2017[[barrio]]<-mBasico
mseRandomForestComuna2017[barrio]<-mse
}
View(aux_test_2018)
subseting_fecha<-function(data,fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subset(data,(mdy(data$FECHA))>=fechai)
a<-subset(a,(mdy(a$FECHA))<=fechaf)
return(a)
}
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-a[-6]
#obteniendo el modelo del barrio ingresado
#modelo<-rf[[barrio]]
#realizando la predicción
#Accidentes_Predichos<-predict(modelo,a)
#Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
return(a)
}
Altamira<-modelosRandomForestComuna2017[["Altamira"]]
Accidentes_Predichos<-predict(Altamira,w)
w<-pred_barrios("Altamira",mdy("1/01/2017"),mdy("09/29/2017"))
Fechas<-read.csv("fest_etiq.csv")
w<-pred_barrios("Altamira",mdy("1/01/2017"),mdy("09/29/2017"))
w<-w[c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO")]
Altamira<-modelosRandomForestComuna2017[["Altamira"]]
Accidentes_Predichos<-predict(Altamira,w)
View(w)
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/29/2018"))
w<-w[c("NOMBRE_DIA","FESTIVO","DIA","SEMANA","MES","ANIO")]
Accidentes_Predichos<-predict(Altamira,w)
levels(w)
levels(w$NOMBRE_DIA)
levels(aux_train_2018$NOMBRE_DIA)
levels(w$classes)
levels(w$NOMBRE_DIA)
levels(aux_train_2018$NOMBRE_DIA)
levels(w$FESTIVO)
levels(aux_train_2018$FESTIVO)
levels(w$ANIO)
levels(aux_train_2018$ANIO)
levels(w$MES)
levels(aux_train_2018$MES)
levels(w$DIA)
levels(aux_train_2018$DIA)
levels(w$SEMANA)
levels(aux_train_2018$SEMANA)
transform.data.frame(w, SEMANA = as.numeric(SEMANA))
View(w)
w<-transform.data.frame(w, SEMANA = as.numeric(SEMANA))
View(w)
Accidentes_Predichos<-predict(Altamira,w)
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-transform.data.frame(a, SEMANA = as.numeric(SEMANA))
a<-a[-6]
#obteniendo el modelo del barrio ingresado
modelo<-rf[[barrio]]
#realizando la predicción
Accidentes_Predichos<-predict(modelo,a)
Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
return(a)
}
#test
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/29/2018"))
#la sgte linea no es necesaria si se carga desde el inicio de la app el archivo
rf<-get(load("modelosRandomForestBarrio2018.RData"))
#test
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/29/2018"))
View(w)
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-transform.data.frame(a, SEMANA = as.numeric(SEMANA))
a<-a[-6]
#obteniendo el modelo del barrio ingresado
modelo<-rf[[barrio]]
#realizando la predicción
Accidentes_Predichos<-predict(modelo,a)
Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
return(Fecha)
}
#test
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/29/2018"))
View(w)
pred_barrios<-function(barrio="",fechai=mdy('1/01/2000'),fechaf=mdy('12/31/2020')){
a<-subseting_fecha(Fechas,fechai,fechaf)
DIA<-array()
MES<-array()
ANIO<-array()
NOMBRE_DIA<-array()
SEMANA<-array()
SEMANA<-strftime(mdy(a$FECHA),format = "%V")
NOMBRE_DIA<-wday(mdy(a$FECHA))
ANIO<-year(mdy(a$FECHA))
MES<-month(mdy(a$FECHA))
DIA<-day(mdy(a$FECHA))
Fecha<-a[1]
a<-a[-1]
a<-cbind(a,ANIO,MES,DIA,NOMBRE_DIA,SEMANA)
a<-transform.data.frame(a, SEMANA = as.numeric(SEMANA))
a<-a[-6]
#obteniendo el modelo del barrio ingresado
modelo<-rf[[barrio]]
#realizando la predicción
Accidentes_Predichos<-predict(modelo,a)
Fecha<-cbind(Fecha,a$NOMBRE_DIA,Accidentes_Predichos)
names(Fecha)<-c("FECHA","DIA","ACCIDENTES PREDICHOS")
return(Fecha)
}
#test
w<-pred_barrios("Altamira",mdy("1/01/2018"),mdy("1/29/2018"))
View(w)
summary(mseRandomForestComuna2017)
